import type { Metadata } from 'next';
import { Geist, Geist_Mono, Inter } from 'next/font/google';
import './globals.css';
import 'prosemirror-view/style/prosemirror.css';
import 'prosemirror-gapcursor/style/gapcursor.css';
import Provider from '@/components/ui/Provider';
import { cookies } from 'next/headers';
import HeaderShell from '@/components/layout/HeaderShell';

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

// 라틴(영문) 이탤릭 지원 폰트
const inter = Inter({
  variable: '--font-inter',
  subsets: ['latin'],
  style: ['normal', 'italic'],
  display: 'swap',
});

export const metadata: Metadata = {
  title: 'publiT',
  description: 'Generated by create next app',
};

export default async function RootLayout({ children }: { children: React.ReactNode }) {
  const cookieStore = await cookies();
  const isLoggedIn = !!cookieStore.get('accessToken');
  const role = cookieStore.get('role')?.value as 'user' | 'admin' | undefined;

  return (
    <html
      suppressHydrationWarning
      className={`${geistSans.variable} ${geistMono.variable} ${inter.variable}`}
    >
      <body>
        <Provider>
          <div style={{ height: '100dvh', display: 'flex', flexDirection: 'column' }}>
            <HeaderShell isLoggedIn={isLoggedIn} {...(role && { role })} />
            <main
              style={{
                flex: '1 1 auto',
                height: '100%',
                minHeight: 0,
                display: 'flex',
                flexDirection: 'column',
              }}
            >
              {children}
            </main>
          </div>
        </Provider>
      </body>
    </html>
  );
}
